/* eslint-disable no-template-curly-in-string */
import { CERTIFICATES } from '@site/src/constants/kubernetes/certs'
import { PORTS } from '@site/src/constants/kubernetes/ports'
import { CUSTOM_VALUE } from '@site/src/constants/kubernetes/customValue'
import { TCustomValueItems } from '../../customTypes/customValue'

export const KUBE_API_ARGS: TCustomValueItems = {
  etcdCafile: { value: `${CERTIFICATES.etcdCA.crtPath}` },
  etcdCertfile: { value: `${CERTIFICATES.kubernetesEtcdClient.crtPath}` },
  etcdKeyfile: { value: `${CERTIFICATES.kubernetesEtcdClient.keyPath}` },
  certDir: { value: "/var/run/kubernetes" },
  kubeletClientCertificate: { value: `${CERTIFICATES.kubernetesKubeletClient.crtPath}` },
  kubeletClientKey: { value: `${CERTIFICATES.kubernetesKubeletClient.keyPath}` },
  clientCAFile: { value: `${CERTIFICATES.kubernetesCA.crtPath}` },
  proxyClientCertFile: { value: `${CERTIFICATES.kubernetesFrontProxyClient.crtPath}` },
  proxyClientKeyFile: { value: `${CERTIFICATES.kubernetesFrontProxyClient.keyPath}` },
  tlsCertFile: { value: `${CERTIFICATES.kubernetesServer.crtPath}` },
  tlsPrivateKeyFile: { value: `${CERTIFICATES.kubernetesServer.keyPath}` },
  clientCaFile: { value: `${CERTIFICATES.kubernetesCA.crtPath}` },
  serviceAccountKeyFile: { value: `${CERTIFICATES.kubernetesSA.crtPath}` },
  requestheaderClientCaFile: { value: `${CERTIFICATES.frontProxyCA.crtPath}` },
  serviceAccountSigningKeyFile: { value: `${CERTIFICATES.kubernetesSA.keyPath}` },

  aggregatorRejectForwardingRedirect: { value: "true" },
  allowPrivileged: { value: "true" },
  anonymousAuth: { value: "true" },
  auditLogBatchThrottleEnable: { value: "false" },
  auditLogCompress: { value: "false" },
  auditLogTruncateEnabled: { value: "false" },
  auditWebhookBatchThrottleEnable: { value: "true" },
  auditWebhookTruncateEnabled: { value: "false" },
  contentionProfiling: { value: "false" },
  enableAggregatorRouting: { value: "true" },
  enableBootstrapTokenAuth: { value: "true" },
  enableGarbageCollector: { value: "true" },
  enableLogsHandler: { value: "true" },
  enablePriorityAndFairness: { value: "true" },
  encryptionProviderConfigAutomaticReload: { value: "false" },
  help: { value: "false" },
  permitAddressSharing: { value: "false" },
  permitPortSharing: { value: "false" },
  profiling: { value: "false" },
  version: { value: "false" },
  watchCache: { value: "true" },
  logTextSplitStream: { value: "false" },
  shutdownSendRetryAfter: { value: "false" },
  logJsonSplitStream: { value: "false" },
  serviceAccountExtendTokenExpiration: { value: "true" },
  serviceAccountLookup: { value: "true" },

  apiserverCount: { value: "1" },
  auditLogBatchBufferSize: { value: "10000" },
  auditLogBatchMaxSize: { value: "1" },
  auditLogBatchThrottleBurst: { value: "0" },
  auditLogBatchThrottleQps: { value: "0" },
  auditLogMaxage: { value: "30" },
  auditLogMaxbackup: { value: "10" },
  auditLogMaxsize: { value: "1000" },
  auditLogTruncateMaxBatchSize: { value: "10485760" },
  auditLogTruncateMaxEventSize: { value: "102400" },
  auditWebhookBatchBufferSize: { value: "10000" },
  auditWebhookBatchMaxSize: { value: "400" },
  auditWebhookBatchThrottleBurst: { value: "15" },
  auditWebhookBatchThrottleQps: { value: "10" },
  auditWebhookTruncateMaxBatchSize: { value: "10485760" },
  auditWebhookTruncateMaxEventSize: { value: "102400" },
  defaultNotReadyTolerationSeconds: { value: "300" },
  defaultUnreachableTolerationSeconds: { value: "300" },
  defaultWatchCacheSize: { value: "100" },
  deleteCollectionWorkers: { value: "1" },
  kubernetesServiceNodePort: { value: "0" },
  leaseReuseDurationSeconds: { value: "60" },
  maxMutatingRequestsInflight: { value: "200" },
  maxRequestsInflight: { value: "400" },
  minRequestTimeout: { value: "1800" },
  goawayChance: { value: "0" },
  http2MaxStreamsPerConnection: { value: "0" },
  v: { value: "2" },
  logJsonInfoBufferSize: { value: "0" },
  logTextInfoBufferSize: { value: "0" },
  maxConnectionBytesPerSec: { value: "0" },

  kubeletPort: { value: `${PORTS.kubeletServer.portNumber}` },
  securePort: { value: `${PORTS.kubeAPIServer.portNumber}` },
  kubeletReadOnlyPort: { value: `${PORTS.kubeletReadOnlyPort.portNumber}` },
  serviceNodePortRange: { value: "30000-32767" },

  etcdServers: { value: `https://127.0.0.1:${PORTS.etcdServer.portNumber}` },
  serviceAccountIssuer: { value: `https://kubernetes.default.svc.${CUSTOM_VALUE.kubernetesClusterDomain.value}` },
  serviceClusterIpRange: { value: `${CUSTOM_VALUE.kubernetesServiceCIDR.value}` },

  auditWebhookInitialBackoff: { value: "10s" },
  auditWebhookBatchMaxWait: { value: "30s" },
  serviceAccountMaxTokenExpiration: { value: "0s" },
  shutdownWatchTerminationGracePeriod: { value: "0s" },
  shutdownDelayDuration: { value: "0s" },
  requestTimeout: { value: "1m0s" },
  eventTtl: { value: "1h0m0s" },
  livezGracePeriod: { value: "0s" },
  logFlushFrequency: { value: "5s" },
  kubeletTimeout: { value: "5s" },
  etcdCompactionInterval: { value: "5m0s" },
  etcdCountMetricPollPeriod: { value: "1m0s" },
  etcdDbMetricPollInterval: { value: "30s" },
  etcdHealthcheckTimeout: { value: "2s" },
  etcdReadycheckTimeout: { value: "2s" },
  authenticationTokenWebhookCacheTtl: { value: "2m0s" },
  authorizationWebhookCacheAuthorizedTtl: { value: "5m0s" },
  authorizationWebhookCacheUnauthorizedTtl: { value: "30s" },
  auditWebhookBatchInitialBackoff: { value: "10s" },
  auditLogBatchMaxWait: { value: "0s" },

  bindAddress: { value: "0.0.0.0" },

  cloudProviderGceL7lbSrcCidrs: { value: "130.211.0.0/22,35.191.0.0/16" },
  cloudProviderGceLbSrcCidrs: { value: "130.211.0.0/22,209.85.152.0/22,209.85.204.0/22,35.191.0.0/16" },

  apiAudiences: { value: "konnectivity-server" },
  loggingFormat: { value: "text" },
  auditLogFormat: { value: "json" },
  auditLogMode: { value: "batch" },
  auditWebhookMode: { value: "batch" },
  auditLogVersion: { value: "audit.k8s.io/v1" },
  auditWebhookVersion: { value: "audit.k8s.io/v1" },
  authenticationTokenWebhookVersion: { value: "v1beta1" },
  authorizationMode: { value: "Node,RBAC" },
  authorizationWebhookVersion: { value: "v1beta1" },
  cloudProvider: { value: "external" },
  enableAdmissionPlugins: { value: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota,NodeRestriction,PodSecurity" },
  endpointReconcilerType: { value: "lease" },
  storageMediaType: { value: "application/vnd.kubernetes.protobuf" },
  etcdPrefix: { value: "/registry" },
  featureGates: { value: "RotateKubeletServerCertificate=true" },
  kubeletPreferredAddressTypes: { value: "InternalIP,ExternalIP,Hostname" },
  oidcSigningAlgs: { value: "RS256" },
  oidcUsernameClaim: { value: "sub" },

  requestheaderAllowedNames: { value: "front-proxy-client" },
  requestheaderExtraHeadersPrefix: { value: "X-Remote-Extra-" },
  requestheaderGroupHeaders: { value: "X-Remote-Group" },
  requestheaderUsernameHeaders: { value: "X-Remote-User" },
  runtimeConfig: { value: "api/all=true" },
  storageBackend: { value: "etcd3" },
  auditPolicyFile: { value: `${CUSTOM_VALUE.kubernetesAPIAuditPolicyPath.value}` },
  auditLogPath: { value: `${CUSTOM_VALUE.kubernetesAPIAuditLogPath.value}` },

  advertiseAddress: { value: "" },
  admissionControl: { value: "" },
  admissionControlConfigFile: { value: "" },
  allowMetricLabels: { value: "" },
  allowMetricLabelsManifest: { value: "" },
  auditWebhookConfigFile: { value: "" },
  authenticationConfig: { value: "" },
  authenticationTokenWebhookConfigFile: { value: "" },
  authorizationConfig: { value: "" },
  authorizationPolicyFile: { value: "" },
  authorizationWebhookConfigFile: { value: "" },
  cloudConfig: { value: "" },
  corsAllowedOrigins: { value: "" },
  debugSocketPath: { value: "" },
  disableAdmissionPlugins: { value: "" },
  disabledMetrics: { value: "" },
  egressSelectorConfigFile: { value: "" },
  encryptionProviderConfig: { value: "" },
  etcdServersOverrides: { value: "" },
  externalHostname: { value: "" },
  kubeletCertificateAuthority: { value: "" },
  oidcCaFile: { value: "" },
  oidcClientId: { value: "" },
  oidcGroupsClaim: { value: "" },
  oidcGroupsPrefix: { value: "" },
  oidcIssuerUrl: { value: "" },
  oidcRequiredClaim: { value: "" },
  oidcUsernamePrefix: { value: "" },
  peerAdvertiseIp: { value: "" },
  peerAdvertisePort: { value: "" },
  peerCaFile: { value: "" },
  serviceAccountJwksUri: { value: "" },
  showHiddenMetricsForVersion: { value: "" },
  strictTransportSecurityDirectives: { value: "" },
  tlsCipherSuites: { value: "" },
  tlsMinVersion: { value: "" },
  tlsSniCertKey: { value: "" },
  tokenAuthFile: { value: "" },
  tracingConfigFile: { value: "" },
  vmodule: { value: "" },
  watchCacheSizes: { value: "" }
};

